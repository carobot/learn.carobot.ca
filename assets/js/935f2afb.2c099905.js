"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:i=>{i.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Tutorial Intro","href":"/tutorial","docId":"tutorial"},{"type":"category","label":"TinkerKit LCD Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"TinkerKit LCD - Tutorials","href":"/tinkerkit/tinkerkit-lcd-tutorials","docId":"tinkerkit/tinkerkit-lcd-0"},{"type":"link","label":"Windows Installation Guide","href":"/tinkerkit/tinkerkit-lcd-tutorial-01-windows-installation-guide","docId":"tinkerkit/tinkerkit-lcd-1"},{"type":"link","label":"Introduction to TinkerKit LCD","href":"/tinkerkit/tinkerkit-lcd-tutorial-02-introduction-to-lcd","docId":"tinkerkit/tinkerkit-lcd-2"},{"type":"link","label":"TinkerKit LCD Serial","href":"/tinkerkit/tinkerkit-lcd-tutorial-03-lcd-serial","docId":"tinkerkit/tinkerkit-lcd-3"},{"type":"link","label":"TinkerKit LCD Local (No Arduino)","href":"/tinkerkit/tinkerkit-lcd-tutorial-04-lcd-local-no-arduino","docId":"tinkerkit/tinkerkit-lcd-4"},{"type":"link","label":"Arduino & 2 Wires","href":"/tinkerkit/tinkerkit-lcd-tutorial-05-arduino-2-wires","docId":"tinkerkit/tinkerkit-lcd-5"},{"type":"link","label":"Two-Wire Interface","href":"/tinkerkit/tinkerkit-lcd-tutorial-06-arduino-2-wires","docId":"tinkerkit/tinkerkit-lcd-6"}],"href":"/tinkerkit/"},{"type":"category","label":"KiCAD Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Beginner Tutorial to KiCAD","href":"/kicad/kicad-basic","docId":"kicad/kicad-basic"}],"href":"/kicad/"},{"type":"category","label":"C Programming using Arduino","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction to C With Arduino","href":"/intro-to-C/c01-beginning","docId":"intro-to-C/c01-beginning"},{"type":"link","label":"Variable Types","href":"/intro-to-C/c02-types","docId":"intro-to-C/c02-types"},{"type":"link","label":"Literals","href":"/intro-to-C/c03-literals","docId":"intro-to-C/c03-literals"},{"type":"link","label":"Programming Operators","href":"/intro-to-C/c04-operator","docId":"intro-to-C/c04-operator"},{"type":"link","label":"Programming Constructs","href":"/intro-to-C/c05-constructs","docId":"intro-to-C/c05-constructs"},{"type":"link","label":"Arrays","href":"/intro-to-C/c06-arrays","docId":"intro-to-C/c06-arrays"},{"type":"link","label":"Functions","href":"/intro-to-C/c07-functions","docId":"intro-to-C/c07-functions"},{"type":"link","label":"Data Conversion","href":"/intro-to-C/c08-data-conversions","docId":"intro-to-C/c08-data-conversions"}]},{"type":"category","label":"Chassis Robot Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Building","href":"/chassis-robot/building","docId":"chassis-robot/building"},{"type":"link","label":"Wiring","href":"/chassis-robot/wiring","docId":"chassis-robot/wiring"},{"type":"link","label":"Programming","href":"/chassis-robot/programming","docId":"chassis-robot/programming"}],"href":"/chassis-robot/"}]},"docs":{"chassis-robot/building":{"id":"chassis-robot/building","title":"Building","description":"Materials:","sidebar":"tutorialSidebar"},"chassis-robot/chassis-robot":{"id":"chassis-robot/chassis-robot","title":"Chassis Robot Kit","description":"The Chassis itself cannot do much on its own. Adding an Arduino allows us to give the Chassis a brain, to learn and perform commands. Pairing the Arduino with a motor sheild gives us the ability to better communicate with the motors and the Arduino. In this tutorial you will learn how to assemble, wire, and program a basic Chassis robot to function as a programmable robot.","sidebar":"tutorialSidebar"},"chassis-robot/programming":{"id":"chassis-robot/programming","title":"Programming","description":"Development Tools Needed","sidebar":"tutorialSidebar"},"chassis-robot/wiring":{"id":"chassis-robot/wiring","title":"Wiring","description":"Materials:","sidebar":"tutorialSidebar"},"intro-to-C/c01-beginning":{"id":"intro-to-C/c01-beginning","title":"Introduction to C With Arduino","description":"Let\u2019s start with a small and fun exercise to introduce ourselves to C programming and Arduino. Follow the diagram below to assemble your circuit.","sidebar":"tutorialSidebar"},"intro-to-C/c02-types":{"id":"intro-to-C/c02-types","title":"Variable Types","description":"Types help define and determine the size of data. It is usually placed in front of a variable to declare its type and data size. Some types that are commonly used in C programming are","sidebar":"tutorialSidebar"},"intro-to-C/c03-literals":{"id":"intro-to-C/c03-literals","title":"Literals","description":"Literals are data used for representing fixed values or constant variables that cannot be changed or modified. They can be used directly in the code. For example:","sidebar":"tutorialSidebar"},"intro-to-C/c04-operator":{"id":"intro-to-C/c04-operator","title":"Programming Operators","description":"Operators are symbols that carry out a specific function. For example \'*\' multiplies two numbers.","sidebar":"tutorialSidebar"},"intro-to-C/c05-constructs":{"id":"intro-to-C/c05-constructs","title":"Programming Constructs","description":"A construct is a line of code that performs a specific task under a specific condition, this may include if, if/else, elseif statements, while, for loops and many more.","sidebar":"tutorialSidebar"},"intro-to-C/c06-arrays":{"id":"intro-to-C/c06-arrays","title":"Arrays","description":"Learning Goals","sidebar":"tutorialSidebar"},"intro-to-C/c07-functions":{"id":"intro-to-C/c07-functions","title":"Functions","description":"Learning Goals","sidebar":"tutorialSidebar"},"intro-to-C/c08-data-conversions":{"id":"intro-to-C/c08-data-conversions","title":"Data Conversion","description":"Learning Goals","sidebar":"tutorialSidebar"},"kicad/kicad":{"id":"kicad/kicad","title":"Intro to Folder KiCAD","description":"hello hello this is a markdown file for the folder under intro of Kicad.","sidebar":"tutorialSidebar"},"kicad/kicad-basic":{"id":"kicad/kicad-basic","title":"Beginner Tutorial to KiCAD","description":"Installation","sidebar":"tutorialSidebar"},"tinkerkit/tinkerkit":{"id":"tinkerkit/tinkerkit","title":"TinkerKit Folder Intro","description":"hello hello this is a markdown file for the folder under intro of tinker kit.","sidebar":"tutorialSidebar"},"tinkerkit/tinkerkit-lcd-0":{"id":"tinkerkit/tinkerkit-lcd-0","title":"TinkerKit LCD - Tutorials","description":"With the TinkerKit LCD module, you can write text on the module\'s screen in a few minutes. The LCD can be used like a regular module by plugging it into the TinkerKit! shield or as an independent component; it has in fact an ATmega 32U4 microcontroller and a USB port on board that make it a fully-fledged LCD-shaped Arduino Leonardo.","sidebar":"tutorialSidebar"},"tinkerkit/tinkerkit-lcd-1":{"id":"tinkerkit/tinkerkit-lcd-1","title":"Windows Installation Guide","description":"In order to use your LCD module with Windows, you have to install the driver for it. You can download the driver from our TinkerKit LCD product page.","sidebar":"tutorialSidebar"},"tinkerkit/tinkerkit-lcd-2":{"id":"tinkerkit/tinkerkit-lcd-2","title":"Introduction to TinkerKit LCD","description":"With the TinkerKit LCD module you can write text on the module\u2019s screen in a few minutes. It has an LCD display on board and it requires a dedicated software library that is available here. The LCD can be used like a regular module by plugging it into the TinkerKit! shield or as an independent component; it has in fact a microcontroller and a USB port on board that make it a fully-fledged LCD-shaped Arduino Leonardo.","sidebar":"tutorialSidebar"},"tinkerkit/tinkerkit-lcd-3":{"id":"tinkerkit/tinkerkit-lcd-3","title":"TinkerKit LCD Serial","description":"In this tutorial we use the TinkerKit LCD module from the Serial port of the TinkerKit! shield.","sidebar":"tutorialSidebar"},"tinkerkit/tinkerkit-lcd-4":{"id":"tinkerkit/tinkerkit-lcd-4","title":"TinkerKit LCD Local (No Arduino)","description":"The TinkerKit LCD module can also be used by itself, without Arduino or TinkerKit! shield. That\u2019s because it mounts the same microcontroller as the Arduino Leonardo; thanks to its micro-usb connector, it can be plugged straight into your computer and programmed from the software just like a regular Arduino Leonardo.","sidebar":"tutorialSidebar"},"tinkerkit/tinkerkit-lcd-5":{"id":"tinkerkit/tinkerkit-lcd-5","title":"Arduino & 2 Wires","description":"The TinkerKit LCD module can be controlled straight from the Arduino, using the serial communication, without any shield or other module. Remember to upload the SerialFirmware into the LCD board, as we did in the four-cable serial tutorial. It\u2019s located under examples->TKLCD->SerialFirmware","sidebar":"tutorialSidebar"},"tinkerkit/tinkerkit-lcd-6":{"id":"tinkerkit/tinkerkit-lcd-6","title":"Two-Wire Interface","description":"The TinkerKit LCD module also supports TWI connections. TWI stands for \u201cTwo-Wire Interface\u201d and it\u2019s another way to call the I2C bus technology. Basically it allows to connect multiple devices in series. This means that you can hook a large number of LCD screens, connecting them \u201cin-line\u201d using the two TWI ports, one for input and one for output. One of them must be the master (or you can use a TInkerKit! shield), while the others must run the TWI firmware. The TWI port has four pins, that\u2019s why we need the 4-pin jumper wire (Molex KK 2.54mm) cable to connect them.","sidebar":"tutorialSidebar"},"tutorial":{"id":"tutorial","title":"Tutorial Intro","description":"Nothing here right now.","sidebar":"tutorialSidebar"}}}')}}]);