"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1347],{69209:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=o(74848),i=o(28453);const r={title:"Introduction to the Wifi Tool",sidebar_position:1},a=void 0,s={id:"ESP32-Wifi-Tool/Introduction",title:"Introduction to the Wifi Tool",description:"Rationale",source:"@site/Projects/ESP32-Wifi-Tool/Introduction.md",sourceDirName:"ESP32-Wifi-Tool",slug:"/ESP32-Wifi-Tool/Introduction",permalink:"/Projects/ESP32-Wifi-Tool/Introduction",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Introduction to the Wifi Tool",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Project 6.2: Two-way Data Communication - IMU Sensor to PC",permalink:"/Projects/ESP32-Starter-Kit/Project-6.2"},next:{title:"Specifications",permalink:"/Projects/ESP32-Wifi-Tool/Specifications"}},l={},c=[{value:"Rationale",id:"rationale",level:2},{value:"Overview",id:"overview",level:2},{value:"Goals",id:"goals",level:2},{value:"Continual Development",id:"continual-development",level:2}];function d(e){const t={h2:"h2",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"rationale",children:"Rationale"}),"\n",(0,n.jsx)(t.p,{children:"The Wi-Fi and how data packets are transferred between devices have been seen as a\r\n\u201cblack-box\u201d to most audiences today. This ESP-32 microcontroller based project will help\r\nyou unfold the technical layers that are abstracted away from us. This project is also a great\r\nstarting point to strengthen your hardware prototyping as well as software coding skills.\r\nMost importantly, you will use it as a sandbox and adjust the hardware and software per\r\nyour liking."}),"\n",(0,n.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsx)(t.p,{children:"This prototype is a direct re-engineering to \u201cYour Swiss Army Knife for Wireless Networks\u201d\r\nproject by Cipher (2023). The major function of the device is to monitor network traffic on\r\nthe move. It monitors the Wi-Fi traffic, scans for nearby Wi-Fi APs, simulates beacon spams,\r\nand detects authentication attacks."}),"\n",(0,n.jsx)(t.h2,{id:"goals",children:"Goals"}),"\n",(0,n.jsx)(t.p,{children:"The goal of this project is to achieve an intermediate-level understanding of the ESP32\r\nfunctionalities as well as to explore its Wi-Fi capabilities on an educational level. We will\r\nutilize the on-board antenna of the development board to accomplish the wireless\r\nconnectivity, and program the microcontroller with the Arduino IDE via a micro-USB cable."}),"\n",(0,n.jsx)(t.h2,{id:"continual-development",children:"Continual Development"}),"\n",(0,n.jsx)(t.p,{children:"Both the hardware and software presented in this project are nowhere close to\r\noptimization. For example, the push-button debounce can be designed much more\r\neffectively with proper implementation of a debouncing circuit, and the entire breadboard\r\nprototype can be integrated onto a customized PCB with surface-mount components. On\r\nthe other side, the code base can be migrated onto a more robust platform such as the\r\nExpressif IDF. However, these implementations will be left open to the end-user as\r\ncontinual development ideas. Afterall, this is merely a starting point for educational needs."})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>s});var n=o(96540);const i={},r=n.createContext(i);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);