"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4330],{95348:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>s,default:()=>c,frontMatter:()=>d,metadata:()=>o,toc:()=>l});var t=n(74848),i=n(28453);const d={sidebar_position:20},s="20. Thermometer",o={id:"UNO-R4-Starter-Kit/Thermometer",title:"20. Thermometer",description:"Whether you're new to electronics or a seasoned maker, this project is a great way to dive into the world of Arduino and sensor interfacing. By the end of this tutorial, you will have a fully functional digital thermometer that displays real-time temperature and humidity readings on an LCD screen.",source:"@site/docs/UNO-R4-Starter-Kit/Thermometer.md",sourceDirName:"UNO-R4-Starter-Kit",slug:"/UNO-R4-Starter-Kit/Thermometer",permalink:"/UNO-R4-Starter-Kit/Thermometer",draft:!1,unlisted:!1,editUrl:"https://github.com/carobot/learn.carobot.ca/tree/main/docs/UNO-R4-Starter-Kit/Thermometer.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"19. LCD 1602 Module",permalink:"/UNO-R4-Starter-Kit/LCD-1602-Module"},next:{title:"21. Shift Registers and LED",permalink:"/UNO-R4-Starter-Kit/Shift-Registers-and-LED"}},a={},l=[{value:"Materials",id:"materials",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Connections",id:"connections",level:4},{value:"LCD1602 to Arduino R4 Minima",id:"lcd1602-to-arduino-r4-minima",level:5},{value:"DHT11 Sensor",id:"dht11-sensor",level:5},{value:"Code",id:"code",level:4}];function h(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"20-thermometer",children:"20. Thermometer"}),"\n",(0,t.jsx)(r.p,{children:"Whether you're new to electronics or a seasoned maker, this project is a great way to dive into the world of Arduino and sensor interfacing. By the end of this tutorial, you will have a fully functional digital thermometer that displays real-time temperature and humidity readings on an LCD screen."}),"\n",(0,t.jsx)(r.h2,{id:"materials",children:"Materials"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Component"}),(0,t.jsx)(r.th,{children:"Image"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.canadarobotix.com/products/160",children:"Breadboard"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/breadboard.webp",width:"200"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.canadarobotix.com/products/922",children:"Jumper wires"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/jumper-wires.webp",width:"200"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.canadarobotix.com/collections/featured-1/products/3060",children:"Arduino Uno R4 Minima"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/arduino-r4-minima.webp",width:"200"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.canadarobotix.com/products/1297",children:"LCD 1602 Module"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/LCD1602.webp",width:"200"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.canadarobotix.com/products/1754",children:"DHT11 Temperature and Humidity Sensor"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/DHT11-Sensor.jpg",width:"200"})})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"instructions",children:"Instructions"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"Make the following connections using the breadboard and jumper wires."}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"connections",children:"Connections"}),"\n",(0,t.jsx)(r.h5,{id:"lcd1602-to-arduino-r4-minima",children:"LCD1602 to Arduino R4 Minima"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"RS (Register Select) pin to Arduino digital pin 7"}),"\n",(0,t.jsx)(r.li,{children:"E (Enable) pin to Arduino digital pin 8"}),"\n",(0,t.jsx)(r.li,{children:"D4 pin to Arduino digital pin 9"}),"\n",(0,t.jsx)(r.li,{children:"D5 pin to Arduino digital pin 10"}),"\n",(0,t.jsx)(r.li,{children:"D6 pin to Arduino digital pin 11"}),"\n",(0,t.jsx)(r.li,{children:"D7 pin to Arduino digital pin 12"}),"\n",(0,t.jsx)(r.li,{children:"GND to GND"}),"\n",(0,t.jsx)(r.li,{children:"VDD to 5V"}),"\n",(0,t.jsx)(r.li,{children:"VO to the middle pin of a 10k potentiometer (the other two pins of the potentiometer to 5V and GND)"}),"\n",(0,t.jsx)(r.li,{children:"BLA to 5V"}),"\n",(0,t.jsx)(r.li,{children:"BLK to GND"}),"\n"]}),"\n",(0,t.jsx)(r.h5,{id:"dht11-sensor",children:"DHT11 Sensor"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Signal to pin 2"}),"\n",(0,t.jsx)(r.li,{children:"Vcc to 5V"}),"\n",(0,t.jsx)(r.li,{children:"Gnd to GND"}),"\n"]}),"\n",(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/Thermometer.png",width:"500"}),"\n",(0,t.jsxs)(r.ol,{start:"2",children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:'Download the "LiquidCrystal" and "DHT" libraries from the Library Manager on the Arduino IDE.'}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Paste the following code into your main Arduino sketch:"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"code",children:"Code"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cpp",children:'#include <LiquidCrystal.h>\r\n#include <DHT.h>\r\n\r\n// Initialize the LCD library with the numbers of the interface pins\r\nLiquidCrystal lcd(7, 8, 9, 10, 11, 12);\r\n\r\n// Define the pin for the DHT11 sensor\r\n#define DHTPIN 2\r\n\r\n// Define the type of DHT sensor\r\n#define DHTTYPE DHT11\r\n\r\n// Initialize the DHT sensor\r\nDHT dht(DHTPIN, DHTTYPE);\r\n\r\nvoid setup() {\r\n  // Start the LCD\r\n  lcd.begin(16, 2);\r\n  lcd.print("DHT11 Sensor");\r\n  \r\n  // Start the serial communication\r\n  Serial.begin(9600);\r\n  \r\n  // Start the DHT sensor\r\n  dht.begin();\r\n  \r\n  delay(2000); // Wait 2 seconds before starting loop\r\n}\r\n\r\nvoid loop() {\r\n  // Read humidity and temperature\r\n  float h = dht.readHumidity();\r\n  float t = dht.readTemperature();\r\n  float f = dht.readTemperature(true);\r\n\r\n  // Check if any reads failed and exit early (to try again).\r\n  if (isnan(h) || isnan(t) || isnan(f)) {\r\n    Serial.println("Failed to read from DHT sensor!");\r\n    lcd.setCursor(0, 0);\r\n    lcd.print("Sensor Error   ");\r\n    return;\r\n  }\r\n\r\n  // Compute heat index in Fahrenheit (the default)\r\n  float hif = dht.computeHeatIndex(f, h);\r\n  // Compute heat index in Celsius\r\n  float hic = dht.computeHeatIndex(t, h, false);\r\n\r\n  // Print values to serial monitor\r\n  Serial.print("Humidity: ");\r\n  Serial.print(h);\r\n  Serial.print(" %\\t");\r\n  Serial.print("Temperature: ");\r\n  Serial.print(t);\r\n  Serial.print(" *C ");\r\n  Serial.print(f);\r\n  Serial.print(" *F\\t");\r\n  Serial.print("Heat index: ");\r\n  Serial.print(hic);\r\n  Serial.print(" *C ");\r\n  Serial.print(hif);\r\n  Serial.println(" *F");\r\n\r\n  // Print values to LCD\r\n  lcd.setCursor(0, 0);\r\n  lcd.print("Temp: ");\r\n  lcd.print(t);\r\n  lcd.print(" C");\r\n\r\n  lcd.setCursor(0, 1);\r\n  lcd.print("Humidity: ");\r\n  lcd.print(h);\r\n  lcd.print(" %");\r\n\r\n  delay(2000); // Delay 2 seconds before the next reading\r\n}\n'})}),"\n",(0,t.jsxs)(r.ol,{start:"4",children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Connect your Arduino to your laptop using a USB-C cable and upload the code to the arduino."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Run! Observe the temperature and humidity on the display."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Prev"}),(0,t.jsx)(r.th,{children:"Next"})]})}),(0,t.jsx)(r.tbody,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"/UNO-R4-Starter-Kit/LCD-1602-Module",children:"19. LCD 1602 Module"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"/UNO-R4-Starter-Kit/Shift-Registers-and-LED",children:"21. Shift Registers and LED"})})]})})]})]})}function c(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>o});var t=n(96540);const i={},d=t.createContext(i);function s(e){const r=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(d.Provider,{value:r},e.children)}}}]);