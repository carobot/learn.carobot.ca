"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1854],{61276:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var i=n(74848),r=n(28453);const s={title:"Project 3: Calibrating and Measuring an Object",sidebar_position:5},a=void 0,o={id:"ESP32-Starter-Kit/Project-3",title:"Project 3: Calibrating and Measuring an Object",description:"Overview:",source:"@site/Projects/ESP32-Starter-Kit/Project-3.md",sourceDirName:"ESP32-Starter-Kit",slug:"/ESP32-Starter-Kit/Project-3",permalink:"/Projects/ESP32-Starter-Kit/Project-3",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Project 3: Calibrating and Measuring an Object",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Project 2: 'Hello world' on Screen",permalink:"/Projects/ESP32-Starter-Kit/Project-2"},next:{title:"Project 4: Sensor Data on Screen",permalink:"/Projects/ESP32-Starter-Kit/Project-4"}},c={},l=[{value:"Overview:",id:"overview",level:2},{value:"Materials:",id:"materials",level:2},{value:"Objectives:",id:"objectives",level:2},{value:"Hardware Assembly:",id:"hardware-assembly",level:2},{value:"Pseudocode:",id:"pseudocode",level:2},{value:"Instructions:",id:"instructions",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"overview",children:"Overview:"}),"\n",(0,i.jsx)(t.p,{children:"Project 3 is to design a weight measurement system using the HX711 load cell amplifier, strain gauge\nand an ESP32 microcontroller. The challenge is to set up a system used to calibrate and another one\nto measure an object with a known weight, and displaying the readings on TFT screen. For this\nproject, the object that I\u2019m going to use is a canadian loonie with a weight of roughly 6.27g."}),"\n",(0,i.jsx)(t.h2,{id:"materials",children:"Materials:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Component"}),(0,i.jsx)(t.th,{children:"Image"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.canadarobotix.com/products/3050",children:"Strain Gauge"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)("img",{src:"/img/docs/projects/esp32-starter-kit/strain-gauge.png",width:"200"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.canadarobotix.com/products/2318",children:"HX711 Amplifier"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)("img",{src:"/img/docs/projects/esp32-starter-kit/HX711.png",width:"200"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.canadarobotix.com/products/3056",children:'1.8" TFT LCD Screen'})}),(0,i.jsx)(t.td,{children:(0,i.jsx)("img",{src:"/img/docs/projects/esp32-starter-kit/LCD-Screen.webp",width:"200"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"https://www.canadarobotix.com/products/2594",children:"ESP32 Dev Board"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)("img",{src:"/img/docs/projects/esp32-starter-kit/ESP32.webp",width:"200"})})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"objectives",children:"Objectives:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Calibration of Load Cell: Calibrate the HX711 load cell amplifier with a known weight to ensure\naccurate measurements."}),"\n",(0,i.jsx)(t.li,{children:"Weight Measurement: Use the calibrated value to measure the weight of an object and display\nit on a TFT screen."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"hardware-assembly",children:"Hardware Assembly:"}),"\n",(0,i.jsx)("img",{src:"/img/docs/projects/esp32-starter-kit/hardware-assembly-2.png",width:"700"}),"\n",(0,i.jsx)(t.h2,{id:"pseudocode",children:"Pseudocode:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Calibrating weight:"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Include the HX711 library\nDefine pins for HX711 data and clock\nInitialize HX711 scale object\n"})}),"\n",(0,i.jsx)(t.p,{children:"Setup:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Begin serial communication at 57600 baud rate\nStart the HX711 with defined pins\n"})}),"\n",(0,i.jsx)(t.p,{children:"Loop:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'If the scale is ready:\nReset any previous scale settings\nPrint "Tare... remove any weights from the scale."\nWait 5 seconds\nZero the scale (tare it)\nPrint "Tare done..."\nPrompt to place a known weight\nWait 5 seconds\nMeasure the weight and take 10 readings for accuracy\nPrint the measured weight\nIf the scale is not ready:\nPrint "HX711 not found."\nWait 1 second before the next loop iteration\n'})}),"\n",(0,i.jsxs)(t.ol,{start:"2",children:["\n",(0,i.jsx)(t.li,{children:"Measuring weight:"}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Include necessary libraries for the HX711 load cell and Adafruit ST7735 TFT display\nDefine pins for the TFT display and HX711 load cell\nInitialize HX711 scale and Adafruit ST7735 display objects\n"})}),"\n",(0,i.jsx)(t.p,{children:"Setup:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"Begin serial communication at 115200 baud\nInitialize the TFT display with specific settings (black background, white text)\nConfigure the TFT display for text display (set text color, size, and initial cursor\nposition)\nInitialize the HX711 scale, set the calibration factor, and tare the scale\n"})}),"\n",(0,i.jsx)(t.p,{children:"Loop:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'Clear the TFT display and reset cursor position\nRead the current weight from the HX711 scale\nDisplay the current weight on the TFT display formatted to five decimal places\nwith the unit "kg"\nPause for 1 second before refreshing the display\n'})}),"\n",(0,i.jsx)(t.h2,{id:"instructions",children:"Instructions:"}),"\n",(0,i.jsx)(t.p,{children:"\u25cf Calibrating an object:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Every calibration factor might be different, so this step can\u2019t be skipped"}),"\n",(0,i.jsx)(t.li,{children:"Prepare an object with a known weight. Because I used a 5kg strain gauge, I personally\nused a canadian lonnie with a weight of ~6.27g."}),"\n",(0,i.jsx)(t.li,{children:"Use calibrating code that you wrote or you can download project3_calibrating.ino from\nthis repository."}),"\n",(0,i.jsx)(t.li,{children:"After uploading, open your Serial Monitor at a baud rate of 115200 and the press\nRESET button on the ESP32"}),"\n",(0,i.jsx)(t.li,{children:"Follow the instructions on the Serial Monitor, it should look like the picture below:"}),"\n"]}),"\n",(0,i.jsx)("img",{src:"/img/docs/projects/esp32-starter-kit/ESP32-5.png",width:"500"}),"\n",(0,i.jsxs)(t.ol,{start:"6",children:["\n",(0,i.jsx)(t.li,{children:"Calculate your calibration factor using this equation:\nCalibration factor: reading / known weight"}),"\n",(0,i.jsx)(t.li,{children:"In my case, the loonie is around 6.27g so I got a result of 2760. So my calibration factor\nshould be around 433.33. Save this number for later use when we measure loonies."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"\u25cf Measuring the weight of an object:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Use your code that you write to measure an object or if you are stuck, visiting\nproject3.ino from the folder is another option."}),"\n",(0,i.jsx)(t.li,{children:"Hold the strain gauge up like I did below and then press RESET, the weight displayed\non the screen should be close to 0."}),"\n"]}),"\n",(0,i.jsx)("img",{src:"/img/docs/projects/esp32-starter-kit/ESP32-6.png",width:"600"}),"\n",(0,i.jsxs)(t.ol,{start:"3",children:["\n",(0,i.jsx)(t.li,{children:"Put a loonie or (or your preferred object) on the strain gauge like I did:"}),"\n"]}),"\n",(0,i.jsx)("img",{src:"/img/docs/projects/esp32-starter-kit/ESP32-7.png",width:"200"}),"\n",(0,i.jsxs)(t.ol,{start:"4",children:["\n",(0,i.jsx)(t.li,{children:"The weight should be displayed on the TFT screen like below:"}),"\n"]}),"\n",(0,i.jsx)("img",{src:"/img/docs/projects/esp32-starter-kit/ESP32-8.png",width:"200"})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(96540);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);