"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7703],{29887:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var t=n(74848),i=n(28453);const a={sidebar_position:11},s="IR Receiver Module",o={id:"UNO-R4-Starter-Kit/IR-Receiver",title:"IR Receiver Module",description:"The KY-022 IR receiver module is a small, affordable sensor that can detect and demodulate infrared signals from a remote control. It operates at a frequency of 38 kHz, which is a standard frequency for most consumer IR remotes. The module consists of a photodiode, an amplifier, and a demodulator circuit, all housed in a single package.",source:"@site/docs/UNO-R4-Starter-Kit/IR-Receiver.md",sourceDirName:"UNO-R4-Starter-Kit",slug:"/UNO-R4-Starter-Kit/IR-Receiver",permalink:"/UNO-R4-Starter-Kit/IR-Receiver",draft:!1,unlisted:!1,editUrl:"https://github.com/carobot/learn.carobot.ca/tree/main/docs/UNO-R4-Starter-Kit/IR-Receiver.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Analog Joystick",permalink:"/UNO-R4-Starter-Kit/Analog-Joystick"},next:{title:"MAX7219 LED Matrix",permalink:"/UNO-R4-Starter-Kit/MAX7219-LED-Matrix"}},l={},c=[{value:"Materials",id:"materials",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Connections",id:"connections",level:4}];function d(e){const r={code:"code",h1:"h1",h2:"h2",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"ir-receiver-module",children:"IR Receiver Module"}),"\n",(0,t.jsx)(r.p,{children:"The KY-022 IR receiver module is a small, affordable sensor that can detect and demodulate infrared signals from a remote control. It operates at a frequency of 38 kHz, which is a standard frequency for most consumer IR remotes. The module consists of a photodiode, an amplifier, and a demodulator circuit, all housed in a single package."}),"\n",(0,t.jsx)(r.h2,{id:"materials",children:"Materials"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Component"}),(0,t.jsx)(r.th,{children:"Image"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Breadboard"}),(0,t.jsx)(r.td,{children:(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/breadboard.webp",width:"200",height:"150"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Jumper wires"}),(0,t.jsx)(r.td,{children:(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/jumper-wires.webp",width:"200",height:"150"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Arduino Uno R4 Minima"}),(0,t.jsx)(r.td,{children:(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/arduino-r4-minima.webp",width:"190",height:"150"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"KY022 IR Receiver Module + Remote"}),(0,t.jsx)(r.td,{children:(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/KY022.jpeg",width:"190",height:"190"})})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"IR Remote Control"}),(0,t.jsx)(r.td,{children:(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/ir-remote-control.jpg",width:"190",height:"190"})})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"instructions",children:"Instructions"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"Make the following connections using the breadboard and jumper wires."}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"connections",children:"Connections"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Signal to pin 11"}),"\n",(0,t.jsx)(r.li,{children:"Vcc to 5V"}),"\n",(0,t.jsx)(r.li,{children:"GND to GND"}),"\n"]}),"\n",(0,t.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/KY022.png",width:"520",height:"350"}),"\n",(0,t.jsxs)(r.ol,{start:"2",children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:'Download the "IRremote" library from the library manager in the arduino IDE.'}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Paste the following code into your main Arduino sketch:"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cpp",children:'#include <IRremote.hpp>\r\n// Set your receiving module to the corresponding Arduino pin\r\nint RECV_PIN = 11;\r\nIRrecv irrecv(RECV_PIN);\r\ndecode_results results;\r\n\r\nvoid setup() {\r\n  Serial.begin(9600); // Start the serial monitor\r\n  IrReceiver.begin(RECV_PIN, ENABLE_LED_FEEDBACK);  // Start the receiver\r\n}\r\n\r\n// This loop continuously runs\r\nvoid loop() {\r\n  if (IrReceiver.decode()) {\r\n    Serial.println(IrReceiver.decodedIRData.decodedRawData, HEX);  // Print "old" raw data\r\n    switch (IrReceiver.decodedIRData.decodedRawData) {\r\n      // Print out the corresponding button depending on the hex code received by the module\r\n      case 0xBA45FF00: Serial.println("POWER"); break;\r\n      case 0xB847FF00: Serial.println("FUNC/STOP"); break;\r\n      case 0xB946FF00: Serial.println("VOL+"); break;\r\n      case 0xBB44FF00: Serial.println("FAST BACK"); break;\r\n      case 0xBF40FF00: Serial.println("PAUSE"); break;\r\n      case 0xBC43FF00: Serial.println("FAST FORWARD"); break;\r\n      case 0xF807FF00: Serial.println("DOWN"); break;\r\n      case 0xEA15FF00: Serial.println("VOL-"); break;\r\n      case 0xF609FF00: Serial.println("UP"); break;\r\n      case 0xE619FF00: Serial.println("EQ"); break;\r\n      case 0xF20DFF00: Serial.println("ST/REPT"); break;\r\n      case 0xE916FF00: Serial.println("0"); break;\r\n      case 0xF30CFF00: Serial.println("1"); break;\r\n      case 0xE718FF00: Serial.println("2"); break;\r\n      case 0xA15EFF00: Serial.println("3"); break;\r\n      case 0xF708FF00: Serial.println("4"); break;\r\n      case 0xE31CFF00: Serial.println("5"); break;\r\n      case 0xA55AFF00: Serial.println("6"); break;\r\n      case 0xBD42FF00: Serial.println("7"); break;\r\n      case 0xAD52FF00: Serial.println("8"); break;\r\n      case 0xB54AFF00: Serial.println("9"); break;\r\n    }\r\n\r\n    IrReceiver.resume(); // Enable receiving of the next value\r\n  }\r\n  // Delay the sensor so as not to overload the module\r\n  delay(1000);\r\n}\n'})}),"\n",(0,t.jsxs)(r.ol,{start:"4",children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Connect your Arduino to your laptop using a USB-C cable and upload the code to the arduino."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"Test! Open the serial monitor and press buttons the remote. See if the correct statements are being printed out."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>o});var t=n(96540);const i={},a=t.createContext(i);function s(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);