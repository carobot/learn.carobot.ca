"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4791],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>s});var o=n(96540);const i={},a=o.createContext(i);function r(e){const t=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:t},e.children)}},38553:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"ESP32-Wifi-Tool/Continual Development","title":"Continual Development","description":"The proposed future development of this project is to upgrade the current ESP32 development board with the newer version, ESP32-S3 WROOM-1, of the line-up. This chip is designed for more efficient computation which is also suitable for on-chip embedded machine learning. The amount of data gathered by the WiFi Tool can easily be translated into manipulatable data formats and can be used for WiFi-related analyses.","source":"@site/Projects/ESP32-Wifi-Tool/Continual Development.md","sourceDirName":"ESP32-Wifi-Tool","slug":"/ESP32-Wifi-Tool/Continual Development","permalink":"/Projects/ESP32-Wifi-Tool/Continual Development","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Continual Development","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"The Assembled Prototype","permalink":"/Projects/ESP32-Wifi-Tool/Prototyping"},"next":{"title":"Introduction to the Ethanol Detector","permalink":"/Projects/Ethanol-Detector/Introduction"}}');var i=n(74848),a=n(28453);const r={title:"Continual Development",sidebar_position:5},s=void 0,l={},c=[];function d(e){const t={br:"br",p:"p",...(0,a.R)(),...e.components};return(0,i.jsxs)(t.p,{children:["The proposed future development of this project is to upgrade the current ESP32 development board with the newer version, ESP32-S3 WROOM-1, of the line-up. This chip is designed for more efficient computation which is also suitable for on-chip embedded machine learning. The amount of data gathered by the WiFi Tool can easily be translated into manipulatable data formats and can be used for WiFi-related analyses.",(0,i.jsx)(t.br,{}),"\n","With this information in-mind, it is then feasible to develop a commercial-grade product that utilizes the S3 chip by making a custom-designed printed circuit. Readers can refer to Appendix A and Appendix B for reference when it comes to the electrical designs although these examples are based on the original ESP32 instead of the S3 version.\nWhen it comes to the software development of the next revisions, the author will be investigating equivalent but newer libraries for the native Expressif IDF IDE. The main advantage of using the native IDE is to be able to access the full hardware architecture with C programming. For example, you are able to allocate different CPU cores for various tasks. This is explicitly advantageous when you are running multiple threads and want to achieve a seamless parallelism.\nLastly, it will be a great addition to the kit if web development is augmented into the system to provide a backend, a frontend, and an API for connections by other clients. Since the Wireless Tool can be communicated via 2.4GHz bandwidths, an IOS/Android backend server can be used for hosting the collected data for statistical analyses such as classification and regression; ML algorithms can then be applied onto the collected data for extracting meaningful inference. Accompanied by the backend server, a frontend interface can be developed for a mobile application. Additional features such as accepting foreign access requests can also be achieved to send the data to a centralized data warehouse.\nTherefore, the next steps toward achieving a commercial-grade version of the Wi-Fi Tool will be to develop the hardware for PCBs as well as to develop the software in the more native IDE - Expressif IDF, and perhaps a complete web stack technology as an enhancement."]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);