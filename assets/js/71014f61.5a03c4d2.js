"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5167],{65433:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var r=n(74848),i=n(28453);const s={sidebar_position:15},o="Water Level Detection Sensor",a={id:"UNO-R4-Starter-Kit/Water-Level-Detection-Sensor",title:"Water Level Detection Sensor",description:"The water level detection sensor is a fundamental component for monitoring water levels in various systems. It provides accurate readings that can be used to automate processes, prevent overflow, or trigger alerts when water levels reach specific thresholds.",source:"@site/docs/UNO-R4-Starter-Kit/Water-Level-Detection-Sensor.md",sourceDirName:"UNO-R4-Starter-Kit",slug:"/UNO-R4-Starter-Kit/Water-Level-Detection-Sensor",permalink:"/UNO-R4-Starter-Kit/Water-Level-Detection-Sensor",draft:!1,unlisted:!1,editUrl:"https://github.com/carobot/learn.carobot.ca/tree/main/docs/UNO-R4-Starter-Kit/Water-Level-Detection-Sensor.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"PIR Motion Sensor",permalink:"/UNO-R4-Starter-Kit/HCSR312-AM312"},next:{title:"DS1307 RTC Module",permalink:"/UNO-R4-Starter-Kit/DS1307-RTC-Module"}},l={},d=[{value:"Materials",id:"materials",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Connections",id:"connections",level:4}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"water-level-detection-sensor",children:"Water Level Detection Sensor"}),"\n",(0,r.jsx)(t.p,{children:"The water level detection sensor is a fundamental component for monitoring water levels in various systems. It provides accurate readings that can be used to automate processes, prevent overflow, or trigger alerts when water levels reach specific thresholds."}),"\n",(0,r.jsx)(t.h2,{id:"materials",children:"Materials"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Component"}),(0,r.jsx)(t.th,{children:"Image"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Breadboard"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/breadboard.webp",width:"200",height:"150"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Jumper wires"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/jumper-wires.webp",width:"200",height:"150"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Arduino Uno R4 Minima"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/arduino-r4-minima.webp",width:"190",height:"150"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Water Level Detection Sensor Module"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/wlds.webp",width:"190",height:"190"})})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"instructions",children:"Instructions"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Make the following connections using the breadboard and jumper wires."}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"connections",children:"Connections"}),"\n",(0,r.jsx)(t.p,{children:"(Water Level Detection Sensor Module to Arduino R4 Minima)"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"S terminal to pint A0"}),"\n",(0,r.jsx)(t.li,{children:"Positive terminal (+) to 5V"}),"\n",(0,r.jsx)(t.li,{children:"Negative terminal (-) to GND"}),"\n"]}),"\n",(0,r.jsx)("img",{src:"/img/docs/UNO-R4-Starter-Kit/WLDS.png",width:"500",height:"400"}),"\n",(0,r.jsxs)(t.ol,{start:"2",children:["\n",(0,r.jsx)(t.li,{children:"Paste the following code into your main Arduino sketch:"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-cpp",children:'int adc_id = 0; // Water Sesnsor (A0) on Arduino R4 Minima\nint HistoryValue = 0; // To store the previous ADC value\nchar printBuffer[128]; // Buffer to store the formatted string\n\nvoid setup() {\n  Serial.begin(9600); // Initialize serial communication at 9600 baud\n}\n\nvoid loop() {\n  int value = analogRead(adc_id); // Read the analog value from pin A0\n\n  // Check if the difference between the current and previous value is greater than 10\n  if (((HistoryValue >= value) && ((HistoryValue - value) > 10)) || ((HistoryValue < value) && ((value - HistoryValue) > 10))) {\n    sprintf(printBuffer, "ADC%d level is %d\\n", adc_id, value); // Format the string\n    Serial.print(printBuffer); // Print the formatted string to the serial monitor\n    HistoryValue = value; // Update the previous value with the current value\n  }\n\n  delay(1000); // Small delay to avoid overwhelming the serial output\n}\n'})}),"\n",(0,r.jsxs)(t.ol,{start:"3",children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Connect your Arduino to your laptop using a USB-C cable and upload the code to the arduino."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Test! Watch the serial monitor as you submerge the water level detection sensor into water."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(96540);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);